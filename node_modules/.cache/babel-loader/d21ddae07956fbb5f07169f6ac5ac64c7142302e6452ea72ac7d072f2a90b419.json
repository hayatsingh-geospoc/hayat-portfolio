{"ast":null,"code":"var _jsxFileName = \"/Users/hayatsingh/Documents/GitHub/Microservice/hayat-portfolio/src/components/ScanningEffect.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScannerContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 10;\n`;\n_c = ScannerContainer;\nconst ScanningLine = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 8px;\n  background: linear-gradient(\n    90deg,\n    rgba(51, 153, 255, 0) 0%,\n    rgba(51, 153, 255, 0.2) 25%,\n    rgba(51, 153, 255, 0.8) 50%,\n    rgba(51, 153, 255, 0.2) 75%,\n    rgba(51, 153, 255, 0) 100%\n  );\n  box-shadow: 0 0 20px rgba(51, 153, 255, 0.5), 0 0 40px rgba(51, 153, 255, 0.3);\n  transform: translateY(-50%);\n  opacity: 0.7;\n  z-index: 2;\n`;\n_c2 = ScanningLine;\nconst ScanningOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(\n    to bottom,\n    rgba(51, 153, 255, 0.05) 0%,\n    rgba(51, 153, 255, 0) 100%\n  );\n  pointer-events: none;\n  transition: all 0.3s ease;\n  z-index: 1;\n  clip-path: polygon(\n    0 0,\n    100% 0,\n    100% var(--scan-position),\n    0 var(--scan-position)\n  );\n`;\n_c3 = ScanningOverlay;\nconst DataBits = styled.div`\n  position: absolute;\n  left: 0;\n  width: 100%;\n  font-family: 'Space Mono', monospace;\n  font-size: 10px;\n  color: rgba(51, 153, 255, 0.8);\n  text-shadow: 0 0 5px rgba(51, 153, 255, 0.5);\n  line-height: 1.2;\n  letter-spacing: 1px;\n  opacity: 0.7;\n  padding: 0 20px;\n  transform: translateY(-50%);\n  z-index: 3;\n  white-space: nowrap;\n`;\n_c4 = DataBits;\nconst ScanningEffect = () => {\n  _s();\n  const scanLineRef = useRef(null);\n  const scanOverlayRef = useRef(null);\n  const dataBitsRef = useRef(null);\n  useEffect(() => {\n    let animationFrameId;\n    let scanPosition = 0;\n    const scanSpeed = 2; // pixels per frame\n\n    // Generate random data bits\n    const generateRandomBits = () => {\n      const chars = '01';\n      let result = '';\n      for (let i = 0; i < 150; i++) {\n        result += chars.charAt(Math.floor(Math.random() * chars.length));\n      }\n      return result;\n    };\n    const updateDataBits = () => {\n      if (dataBitsRef.current) {\n        dataBitsRef.current.textContent = generateRandomBits();\n      }\n    };\n\n    // Animation loop\n    const animate = () => {\n      if (!scanLineRef.current || !scanOverlayRef.current) return;\n      scanPosition += scanSpeed;\n\n      // Reset position when it goes off screen\n      if (scanPosition > window.innerHeight) {\n        scanPosition = 0;\n      }\n\n      // Update scan line position\n      scanLineRef.current.style.top = `${scanPosition}px`;\n\n      // Update data bits position\n      if (dataBitsRef.current) {\n        dataBitsRef.current.style.top = `${scanPosition + 15}px`;\n      }\n\n      // Update scan overlay clip path\n      scanOverlayRef.current.style.setProperty('--scan-position', `${scanPosition}px`);\n\n      // Update data bits periodically\n      if (Math.random() > 0.9) {\n        updateDataBits();\n      }\n      animationFrameId = requestAnimationFrame(animate);\n    };\n    animate();\n    updateDataBits();\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ScannerContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ScanningLine, {\n      ref: scanLineRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScanningOverlay, {\n      ref: scanOverlayRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataBits, {\n      ref: dataBitsRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(ScanningEffect, \"fCD1VQFNcvlV3Nqk0W11Ani5pJs=\");\n_c5 = ScanningEffect;\nexport default ScanningEffect;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"ScannerContainer\");\n$RefreshReg$(_c2, \"ScanningLine\");\n$RefreshReg$(_c3, \"ScanningOverlay\");\n$RefreshReg$(_c4, \"DataBits\");\n$RefreshReg$(_c5, \"ScanningEffect\");","map":{"version":3,"names":["React","useRef","useEffect","styled","jsxDEV","_jsxDEV","ScannerContainer","div","_c","ScanningLine","_c2","ScanningOverlay","_c3","DataBits","_c4","ScanningEffect","_s","scanLineRef","scanOverlayRef","dataBitsRef","animationFrameId","scanPosition","scanSpeed","generateRandomBits","chars","result","i","charAt","Math","floor","random","length","updateDataBits","current","textContent","animate","window","innerHeight","style","top","setProperty","requestAnimationFrame","cancelAnimationFrame","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c5","$RefreshReg$"],"sources":["/Users/hayatsingh/Documents/GitHub/Microservice/hayat-portfolio/src/components/ScanningEffect.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst ScannerContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 10;\n`;\n\nconst ScanningLine = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 8px;\n  background: linear-gradient(\n    90deg,\n    rgba(51, 153, 255, 0) 0%,\n    rgba(51, 153, 255, 0.2) 25%,\n    rgba(51, 153, 255, 0.8) 50%,\n    rgba(51, 153, 255, 0.2) 75%,\n    rgba(51, 153, 255, 0) 100%\n  );\n  box-shadow: 0 0 20px rgba(51, 153, 255, 0.5), 0 0 40px rgba(51, 153, 255, 0.3);\n  transform: translateY(-50%);\n  opacity: 0.7;\n  z-index: 2;\n`;\n\nconst ScanningOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(\n    to bottom,\n    rgba(51, 153, 255, 0.05) 0%,\n    rgba(51, 153, 255, 0) 100%\n  );\n  pointer-events: none;\n  transition: all 0.3s ease;\n  z-index: 1;\n  clip-path: polygon(\n    0 0,\n    100% 0,\n    100% var(--scan-position),\n    0 var(--scan-position)\n  );\n`;\n\nconst DataBits = styled.div`\n  position: absolute;\n  left: 0;\n  width: 100%;\n  font-family: 'Space Mono', monospace;\n  font-size: 10px;\n  color: rgba(51, 153, 255, 0.8);\n  text-shadow: 0 0 5px rgba(51, 153, 255, 0.5);\n  line-height: 1.2;\n  letter-spacing: 1px;\n  opacity: 0.7;\n  padding: 0 20px;\n  transform: translateY(-50%);\n  z-index: 3;\n  white-space: nowrap;\n`;\n\nconst ScanningEffect = () => {\n  const scanLineRef = useRef(null);\n  const scanOverlayRef = useRef(null);\n  const dataBitsRef = useRef(null);\n\n  useEffect(() => {\n    let animationFrameId;\n    let scanPosition = 0;\n    const scanSpeed = 2; // pixels per frame\n\n    // Generate random data bits\n    const generateRandomBits = () => {\n      const chars = '01';\n      let result = '';\n      for (let i = 0; i < 150; i++) {\n        result += chars.charAt(Math.floor(Math.random() * chars.length));\n      }\n      return result;\n    };\n\n    const updateDataBits = () => {\n      if (dataBitsRef.current) {\n        dataBitsRef.current.textContent = generateRandomBits();\n      }\n    };\n\n    // Animation loop\n    const animate = () => {\n      if (!scanLineRef.current || !scanOverlayRef.current) return;\n\n      scanPosition += scanSpeed;\n\n      // Reset position when it goes off screen\n      if (scanPosition > window.innerHeight) {\n        scanPosition = 0;\n      }\n\n      // Update scan line position\n      scanLineRef.current.style.top = `${scanPosition}px`;\n\n      // Update data bits position\n      if (dataBitsRef.current) {\n        dataBitsRef.current.style.top = `${scanPosition + 15}px`;\n      }\n\n      // Update scan overlay clip path\n      scanOverlayRef.current.style.setProperty(\n        '--scan-position',\n        `${scanPosition}px`\n      );\n\n      // Update data bits periodically\n      if (Math.random() > 0.9) {\n        updateDataBits();\n      }\n\n      animationFrameId = requestAnimationFrame(animate);\n    };\n\n    animate();\n    updateDataBits();\n\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n\n  return (\n    <ScannerContainer>\n      <ScanningLine ref={scanLineRef} />\n      <ScanningOverlay ref={scanOverlayRef} />\n      <DataBits ref={dataBitsRef} />\n    </ScannerContainer>\n  );\n};\n\nexport default ScanningEffect;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}