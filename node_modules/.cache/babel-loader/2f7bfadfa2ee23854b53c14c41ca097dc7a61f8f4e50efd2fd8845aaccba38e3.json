{"ast":null,"code":"var _jsxFileName = \"/Users/hayatsingh/Documents/GitHub/Microservice/hayat-portfolio/src/components/Background3D.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useMemo } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { useGLTF, OrbitControls, Stars, Float } from '@react-three/drei';\nimport * as THREE from 'three';\n\n// Custom particle system\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ParticleSystem = ({\n  count = 1000,\n  color = '#00ff00'\n}) => {\n  _s();\n  const mesh = useRef();\n  const light = useRef();\n\n  // Create particles\n  const particles = useMemo(() => {\n    const temp = [];\n    for (let i = 0; i < count; i++) {\n      const time = Math.random() * 100;\n      const factor = 20 + Math.random() * 100;\n      const speed = 0.01 + Math.random() / 200;\n      const x = Math.random() * 2000 - 1000;\n      const y = Math.random() * 2000 - 1000;\n      const z = Math.random() * 2000 - 1000;\n      temp.push({\n        time,\n        factor,\n        speed,\n        x,\n        y,\n        z,\n        mx: 0,\n        my: 0\n      });\n    }\n    return temp;\n  }, [count]);\n\n  // Create particle positions and colors\n  const [positions, colors] = useMemo(() => {\n    const positions = new Float32Array(count * 3);\n    const colors = new Float32Array(count * 3);\n    const color = new THREE.Color(color);\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      positions[i3] = particles[i].x;\n      positions[i3 + 1] = particles[i].y;\n      positions[i3 + 2] = particles[i].z;\n      const colorIntensity = 0.2 + Math.random() * 0.8;\n      colors[i3] = color.r * colorIntensity;\n      colors[i3 + 1] = color.g * colorIntensity;\n      colors[i3 + 2] = color.b * colorIntensity;\n    }\n    return [positions, colors];\n  }, [count, particles, color]);\n\n  // Animation\n  useFrame((state, delta) => {\n    const time = state.clock.getElapsedTime();\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n\n      // Update positions\n      particles[i].time += particles[i].speed;\n\n      // Spiral movement\n      positions[i3] = particles[i].x + Math.sin(particles[i].time * 0.1) * particles[i].factor;\n      positions[i3 + 1] = particles[i].y + Math.cos(particles[i].time * 0.2) * particles[i].factor;\n      positions[i3 + 2] = particles[i].z + Math.sin(particles[i].time * 0.1) * particles[i].factor;\n    }\n    mesh.current.geometry.attributes.position.needsUpdate = true;\n\n    // Move light\n    if (light.current) {\n      light.current.position.x = Math.sin(time * 0.2) * 200;\n      light.current.position.y = Math.cos(time * 0.2) * 200;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"pointLight\", {\n      ref: light,\n      distance: 40,\n      intensity: 5,\n      color: \"#00ff00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"points\", {\n      ref: mesh,\n      children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n        children: [/*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n          attach: \"attributes-position\",\n          count: positions.length / 3,\n          array: positions,\n          itemSize: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n          attach: \"attributes-color\",\n          count: colors.length / 3,\n          array: colors,\n          itemSize: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n        size: 2.5,\n        sizeAttenuation: true,\n        vertexColors: true,\n        transparent: true,\n        opacity: 0.8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n// Background 3D component\n_s(ParticleSystem, \"Mae928TNM7DyG124ro7T4LH+9bI=\", false, function () {\n  return [useFrame];\n});\n_c = ParticleSystem;\nconst Background3D = () => {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0, 0, 40],\n      fov: 50\n    },\n    gl: {\n      antialias: true,\n      alpha: true\n    },\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      pointerEvents: 'none'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"fog\", {\n      attach: \"fog\",\n      args: ['#000000', 60, 100]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"color\", {\n      attach: \"background\",\n      args: ['#000000']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParticleSystem, {\n      count: 1500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stars, {\n      radius: 100,\n      depth: 50,\n      count: 5000,\n      factor: 4,\n      fade: true,\n      speed: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n      enableZoom: false,\n      enablePan: false,\n      enableRotate: false,\n      autoRotate: true,\n      autoRotateSpeed: 0.2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Background3D;\nexport default Background3D;\nvar _c, _c2;\n$RefreshReg$(_c, \"ParticleSystem\");\n$RefreshReg$(_c2, \"Background3D\");","map":{"version":3,"names":["React","useRef","useMemo","Canvas","useFrame","useGLTF","OrbitControls","Stars","Float","THREE","jsxDEV","_jsxDEV","Fragment","_Fragment","ParticleSystem","count","color","_s","mesh","light","particles","temp","i","time","Math","random","factor","speed","x","y","z","push","mx","my","positions","colors","Float32Array","Color","i3","colorIntensity","r","g","b","state","delta","clock","getElapsedTime","sin","cos","current","geometry","attributes","position","needsUpdate","children","ref","distance","intensity","fileName","_jsxFileName","lineNumber","columnNumber","attach","length","array","itemSize","size","sizeAttenuation","vertexColors","transparent","opacity","_c","Background3D","camera","fov","gl","antialias","alpha","style","top","left","width","height","pointerEvents","args","radius","depth","fade","enableZoom","enablePan","enableRotate","autoRotate","autoRotateSpeed","_c2","$RefreshReg$"],"sources":["/Users/hayatsingh/Documents/GitHub/Microservice/hayat-portfolio/src/components/Background3D.js"],"sourcesContent":["import React, { useRef, useMemo } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { useGLTF, OrbitControls, Stars, Float } from '@react-three/drei';\nimport * as THREE from 'three';\n\n// Custom particle system\nconst ParticleSystem = ({ count = 1000, color = '#00ff00' }) => {\n  const mesh = useRef();\n  const light = useRef();\n\n  // Create particles\n  const particles = useMemo(() => {\n    const temp = [];\n    for (let i = 0; i < count; i++) {\n      const time = Math.random() * 100;\n      const factor = 20 + Math.random() * 100;\n      const speed = 0.01 + Math.random() / 200;\n      const x = Math.random() * 2000 - 1000;\n      const y = Math.random() * 2000 - 1000;\n      const z = Math.random() * 2000 - 1000;\n\n      temp.push({ time, factor, speed, x, y, z, mx: 0, my: 0 });\n    }\n    return temp;\n  }, [count]);\n\n  // Create particle positions and colors\n  const [positions, colors] = useMemo(() => {\n    const positions = new Float32Array(count * 3);\n    const colors = new Float32Array(count * 3);\n    const color = new THREE.Color(color);\n\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n      positions[i3] = particles[i].x;\n      positions[i3 + 1] = particles[i].y;\n      positions[i3 + 2] = particles[i].z;\n\n      const colorIntensity = 0.2 + Math.random() * 0.8;\n      colors[i3] = color.r * colorIntensity;\n      colors[i3 + 1] = color.g * colorIntensity;\n      colors[i3 + 2] = color.b * colorIntensity;\n    }\n\n    return [positions, colors];\n  }, [count, particles, color]);\n\n  // Animation\n  useFrame((state, delta) => {\n    const time = state.clock.getElapsedTime();\n\n    for (let i = 0; i < count; i++) {\n      const i3 = i * 3;\n\n      // Update positions\n      particles[i].time += particles[i].speed;\n\n      // Spiral movement\n      positions[i3] =\n        particles[i].x +\n        Math.sin(particles[i].time * 0.1) * particles[i].factor;\n      positions[i3 + 1] =\n        particles[i].y +\n        Math.cos(particles[i].time * 0.2) * particles[i].factor;\n      positions[i3 + 2] =\n        particles[i].z +\n        Math.sin(particles[i].time * 0.1) * particles[i].factor;\n    }\n\n    mesh.current.geometry.attributes.position.needsUpdate = true;\n\n    // Move light\n    if (light.current) {\n      light.current.position.x = Math.sin(time * 0.2) * 200;\n      light.current.position.y = Math.cos(time * 0.2) * 200;\n    }\n  });\n\n  return (\n    <>\n      <pointLight ref={light} distance={40} intensity={5} color='#00ff00' />\n      <points ref={mesh}>\n        <bufferGeometry>\n          <bufferAttribute\n            attach='attributes-position'\n            count={positions.length / 3}\n            array={positions}\n            itemSize={3}\n          />\n          <bufferAttribute\n            attach='attributes-color'\n            count={colors.length / 3}\n            array={colors}\n            itemSize={3}\n          />\n        </bufferGeometry>\n        <pointsMaterial\n          size={2.5}\n          sizeAttenuation={true}\n          vertexColors\n          transparent\n          opacity={0.8}\n        />\n      </points>\n    </>\n  );\n};\n\n// Background 3D component\nconst Background3D = () => {\n  return (\n    <Canvas\n      camera={{ position: [0, 0, 40], fov: 50 }}\n      gl={{ antialias: true, alpha: true }}\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        pointerEvents: 'none',\n      }}\n    >\n      <fog attach='fog' args={['#000000', 60, 100]} />\n      <color attach='background' args={['#000000']} />\n\n      <ParticleSystem count={1500} />\n      <Stars radius={100} depth={50} count={5000} factor={4} fade speed={1} />\n\n      <OrbitControls\n        enableZoom={false}\n        enablePan={false}\n        enableRotate={false}\n        autoRotate\n        autoRotateSpeed={0.2}\n      />\n    </Canvas>\n  );\n};\n\nexport default Background3D;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}