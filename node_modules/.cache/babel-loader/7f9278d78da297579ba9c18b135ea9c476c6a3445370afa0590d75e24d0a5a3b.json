{"ast":null,"code":"var _jsxFileName = \"/Users/hayatsingh/Documents/GitHub/Microservice/hayat-portfolio/src/components/StarsBackground.js\";\nimport React, { useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\n// Animation keyframes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst animStar = keyframes`\n  from {\n    transform: translateY(0px);\n  }\n  to {\n    transform: translateY(-2000px);\n  }\n`;\n\n// Styled components\nconst StarsContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n  background: radial-gradient(ellipse at bottom, #1b2735 0%, #090a0f 100%);\n  overflow: hidden;\n`;\n_c = StarsContainer;\nconst StarsSmall = styled.div`\n  width: 1px;\n  height: 1px;\n  background: transparent;\n  box-shadow: ${generateBoxShadows(700)};\n  animation: ${animStar} 50s linear infinite;\n\n  &:after {\n    content: ' ';\n    position: absolute;\n    top: 2000px;\n    width: 1px;\n    height: 1px;\n    background: transparent;\n    box-shadow: ${generateBoxShadows(700)};\n  }\n`;\n_c2 = StarsSmall;\nconst StarsMedium = styled.div`\n  width: 2px;\n  height: 2px;\n  background: transparent;\n  box-shadow: ${generateBoxShadows(200)};\n  animation: ${animStar} 100s linear infinite;\n\n  &:after {\n    content: ' ';\n    position: absolute;\n    top: 2000px;\n    width: 2px;\n    height: 2px;\n    background: transparent;\n    box-shadow: ${generateBoxShadows(200)};\n  }\n`;\n_c3 = StarsMedium;\nconst StarsBig = styled.div`\n  width: 3px;\n  height: 3px;\n  background: transparent;\n  box-shadow: ${generateBoxShadows(100)};\n  animation: ${animStar} 150s linear infinite;\n\n  &:after {\n    content: ' ';\n    position: absolute;\n    top: 2000px;\n    width: 3px;\n    height: 3px;\n    background: transparent;\n    box-shadow: ${generateBoxShadows(100)};\n  }\n`;\n\n// Helper function to generate random box shadows\n_c4 = StarsBig;\nfunction generateBoxShadows(n) {\n  let shadows = [];\n  for (let i = 0; i < n; i++) {\n    const x = Math.floor(Math.random() * 2000);\n    const y = Math.floor(Math.random() * 2000);\n    shadows.push(`${x}px ${y}px #FFF`);\n  }\n  return shadows.join(', ');\n}\nconst StarsBackground = () => {\n  return /*#__PURE__*/_jsxDEV(StarsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StarsSmall, {\n      id: \"stars\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StarsMedium, {\n      id: \"stars2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StarsBig, {\n      id: \"stars3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_c5 = StarsBackground;\nexport default StarsBackground;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"StarsContainer\");\n$RefreshReg$(_c2, \"StarsSmall\");\n$RefreshReg$(_c3, \"StarsMedium\");\n$RefreshReg$(_c4, \"StarsBig\");\n$RefreshReg$(_c5, \"StarsBackground\");","map":{"version":3,"names":["React","useEffect","styled","keyframes","jsxDEV","_jsxDEV","animStar","StarsContainer","div","_c","StarsSmall","generateBoxShadows","_c2","StarsMedium","_c3","StarsBig","_c4","n","shadows","i","x","Math","floor","random","y","push","join","StarsBackground","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c5","$RefreshReg$"],"sources":["/Users/hayatsingh/Documents/GitHub/Microservice/hayat-portfolio/src/components/StarsBackground.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\n// Animation keyframes\nconst animStar = keyframes`\n  from {\n    transform: translateY(0px);\n  }\n  to {\n    transform: translateY(-2000px);\n  }\n`;\n\n// Styled components\nconst StarsContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n  background: radial-gradient(ellipse at bottom, #1b2735 0%, #090a0f 100%);\n  overflow: hidden;\n`;\n\nconst StarsSmall = styled.div`\n  width: 1px;\n  height: 1px;\n  background: transparent;\n  box-shadow: ${generateBoxShadows(700)};\n  animation: ${animStar} 50s linear infinite;\n\n  &:after {\n    content: ' ';\n    position: absolute;\n    top: 2000px;\n    width: 1px;\n    height: 1px;\n    background: transparent;\n    box-shadow: ${generateBoxShadows(700)};\n  }\n`;\n\nconst StarsMedium = styled.div`\n  width: 2px;\n  height: 2px;\n  background: transparent;\n  box-shadow: ${generateBoxShadows(200)};\n  animation: ${animStar} 100s linear infinite;\n\n  &:after {\n    content: ' ';\n    position: absolute;\n    top: 2000px;\n    width: 2px;\n    height: 2px;\n    background: transparent;\n    box-shadow: ${generateBoxShadows(200)};\n  }\n`;\n\nconst StarsBig = styled.div`\n  width: 3px;\n  height: 3px;\n  background: transparent;\n  box-shadow: ${generateBoxShadows(100)};\n  animation: ${animStar} 150s linear infinite;\n\n  &:after {\n    content: ' ';\n    position: absolute;\n    top: 2000px;\n    width: 3px;\n    height: 3px;\n    background: transparent;\n    box-shadow: ${generateBoxShadows(100)};\n  }\n`;\n\n// Helper function to generate random box shadows\nfunction generateBoxShadows(n) {\n  let shadows = [];\n  for (let i = 0; i < n; i++) {\n    const x = Math.floor(Math.random() * 2000);\n    const y = Math.floor(Math.random() * 2000);\n    shadows.push(`${x}px ${y}px #FFF`);\n  }\n  return shadows.join(', ');\n}\n\nconst StarsBackground = () => {\n  return (\n    <StarsContainer>\n      <StarsSmall id='stars' />\n      <StarsMedium id='stars2' />\n      <StarsBig id='stars3' />\n    </StarsContainer>\n  );\n};\n\nexport default StarsBackground;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}